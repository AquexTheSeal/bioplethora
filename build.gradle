buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: "eclipse"
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

group = 'bioplethora'
version = "${project.minecraftVersion}-1.0.0-beta-v3"

java {
    archivesBaseName = 'bioplethora'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: 'official', version: "${project.minecraftVersion}"

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            arg "-mixin.config=bioplethora.mixins.json"

            mods {
                bioplethora {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=bioplethora.mixins.json"

            mods {
                bioplethora {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'bioplethora', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                bioplethora {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

mixin {
    // MixinGradle Settings
    add sourceSets.main, 'bioplethora.mixin-refmap.json'
    config 'bioplethora.mixins.json'

    debug.verbose = true
    debug.export = true

    quiet
}

repositories {
    maven {
        name = "CurseForge"
        url = "https://www.cursemaven.com"
    }
    maven {
        name = "GeckoLib"
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url 'https://maven.blamejared.com'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraftVersion}-${project.forgeVersion}"
    //Geckolib
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-${mc_version}:3.0.57")
    //Just Enough Items (JEI)
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")
    //Just Enough Resources (JER)
    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:${project.jer}")
    //Patchouli
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-51:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-51")
    //The One Probe
    implementation fg.deobf("curse.maven:the-one-probe-245211:${project.top}")
    //Mixin
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "bioplethora",
                "Specification-Vendor"    : "AquTheSeal, Sajevius, SeagullBoi, Sonic-3xnOs, CrimsonSteve",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "AquTheSeal, Sajevius, SeagullBoi, Sonic-3xnOs, CrimsonSteve",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs" : "bioplethora.mixins.json"
        ])
    }

    rename "mixin.refmap.json", "bioplethora.mixin-refmap.json"
}

jar.finalizedBy('reobfJar')
